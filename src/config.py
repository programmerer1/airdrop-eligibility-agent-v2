import os

APP_ENV = os.getenv("APP_ENV").strip().lower()

MODEL_API_URL = os.getenv("MODEL_API_URL")
MODEL_NAME = os.getenv("MODEL_NAME")
MODEL_API_KEY = os.getenv("MODEL_API_KEY")
MODEL_API_PROXY_URL = os.getenv("MODEL_API_PROXY_URL", "")
MODEL_API_TIMEOUT = int(os.getenv("MODEL_API_TIMEOUT"))

EXTRACTOR_MODEL_API_URL = os.getenv("EXTRACTOR_MODEL_API_URL")
EXTRACTOR_MODEL_NAME = os.getenv("EXTRACTOR_MODEL_NAME")
EXTRACTOR_MODEL_API_KEY = os.getenv("EXTRACTOR_MODEL_API_KEY")
EXTRACTOR_MODEL_API_PROXY_URL = os.getenv("EXTRACTOR_MODEL_API_PROXY_URL", "")
EXTRACTOR_MODEL_API_TIMEOUT = int(os.getenv("EXTRACTOR_MODEL_API_TIMEOUT"))

# --- Настройки LLM-анализатора (OpenAI-совместимый) ---
CONTRACT_ANALYZER_MODEL_API_URL = os.getenv("CONTRACT_ANALYZER_MODEL_API_URL")
CONTRACT_ANALYZER_MODEL_NAME = os.getenv("CONTRACT_ANALYZER_MODEL_NAME")
CONTRACT_ANALYZER_MODEL_API_KEY = os.getenv("CONTRACT_ANALYZER_MODEL_API_KEY")
CONTRACT_ANALYZER_MODEL_API_PROXY_URL = os.getenv("CONTRACT_ANALYZER_MODEL_API_PROXY_URL", "")
# Таймаут для LLM-модели (в секундах), т.к. анализ кода может быть долгим
CONTRACT_ANALYZER_MODEL_TIMEOUT = int(os.getenv("CONTRACT_ANALYZER_MODEL_TIMEOUT"))

EVM_API_REQUEST_DELAY = float(os.getenv("EVM_API_REQUEST_DELAY"))

EVM_API_URL = os.getenv("EVM_API_URL")
EVM_API_KEY = os.getenv("EVM_API_KEY")
EVM_API_TIMEOUT = int(os.getenv("EVM_API_TIMEOUT"))
EVM_API_PROXY_URL = os.getenv("EVM_API_PROXY_URL", "")

SCANNERS_API_PARALLEL_MODE = os.getenv("SCANNERS_API_PARALLEL_MODE", "False").lower() == 'true'

# --- Настройки EvmScanner (Поиск блоков) ---
EVM_SCANNER_API_URL = os.getenv("EVM_SCANNER_API_URL", EVM_API_URL)
EVM_SCANNER_API_KEY = os.getenv("EVM_SCANNER_API_KEY", EVM_API_KEY)
EVM_SCANNER_API_TIMEOUT = int(os.getenv("EVM_SCANNER_API_TIMEOUT", EVM_API_TIMEOUT))
EVM_SCANNER_API_PROXY_URL = os.getenv("EVM_SCANNER_API_PROXY_URL", "")
EVM_SCANNER_RUN_INTERVAL = int(os.getenv("EVM_SCANNER_RUN_INTERVAL"))
EVM_SCANNER_CATCH_UP_THRESHOLD = int(os.getenv("EVM_SCANNER_CATCH_UP_THRESHOLD"))
EVM_SCANNER_CATCH_UP_BATCH_SIZE = int(os.getenv("EVM_SCANNER_CATCH_UP_BATCH_SIZE"))
EVM_SCANNER_FOLLOW_BATCH_SIZE = int(os.getenv("EVM_SCANNER_FOLLOW_BATCH_SIZE"))

# --- Настройки EvmBlockScanner (Поиск транзакций в блоках) ---
EVM_BLOCK_SCANNER_API_URL = os.getenv("EVM_BLOCK_SCANNER_API_URL", EVM_API_URL)
EVM_BLOCK_SCANNER_API_KEY = os.getenv("EVM_BLOCK_SCANNER_API_KEY", EVM_API_KEY)
EVM_BLOCK_SCANNER_API_TIMEOUT = int(os.getenv("EVM_BLOCK_SCANNER_API_TIMEOUT", EVM_API_TIMEOUT))
EVM_BLOCK_SCANNER_API_PROXY_URL = os.getenv("EVM_BLOCK_SCANNER_API_PROXY_URL", "")
EVM_BLOCK_SCANNER_BATCH_SIZE = int(os.getenv("EVM_BLOCK_SCANNER_BATCH_SIZE"))
EVM_BLOCK_SCANNER_RUN_INTERVAL = int(os.getenv("EVM_BLOCK_SCANNER_RUN_INTERVAL"))

# --- Настройки EvmTransactionScanner (Анализ транзакций) ---
EVM_TRANSACTION_SCANNER_API_URL = os.getenv("EVM_TRANSACTION_SCANNER_API_URL", EVM_API_URL)
EVM_TRANSACTION_SCANNER_API_KEY = os.getenv("EVM_TRANSACTION_SCANNER_API_KEY", EVM_API_KEY)
EVM_TRANSACTION_SCANNER_API_TIMEOUT = int(os.getenv("EVM_TRANSACTION_SCANNER_API_TIMEOUT", EVM_API_TIMEOUT))
EVM_TRANSACTION_SCANNER_API_PROXY_URL = os.getenv("EVM_TRANSACTION_SCANNER_API_PROXY_URL", "")
EVM_TRANSACTION_SCANNER_BATCH_SIZE = int(os.getenv("EVM_TRANSACTION_SCANNER_BATCH_SIZE"))
EVM_TRANSACTION_SCANNER_RUN_INTERVAL = int(os.getenv("EVM_TRANSACTION_SCANNER_RUN_INTERVAL"))

EVM_GET_TOKEN_HASH_API_URL = os.getenv("EVM_GET_TOKEN_HASH_API_URL", EVM_API_URL)
EVM_GET_TOKEN_HASH_API_KEY = os.getenv("EVM_GET_TOKEN_HASH_API_KEY", EVM_API_KEY)
EVM_GET_TOKEN_HASH_API_TIMEOUT = int(os.getenv("EVM_GET_TOKEN_HASH_API_TIMEOUT", EVM_API_TIMEOUT))
EVM_GET_TOKEN_HASH_API_PROXY_URL = os.getenv("EVM_GET_TOKEN_HASH_API_PROXY_URL", "")

EVM_CONTRACT_DATE_SCANNER_API_URL = os.getenv("EVM_CONTRACT_DATE_SCANNER_API_URL", EVM_API_URL)
EVM_CONTRACT_DATE_SCANNER_API_KEY = os.getenv("EVM_CONTRACT_DATE_SCANNER_API_KEY", EVM_API_KEY)
EVM_CONTRACT_DATE_SCANNER_API_TIMEOUT = int(os.getenv("EVM_CONTRACT_DATE_SCANNER_API_TIMEOUT", EVM_API_TIMEOUT))
EVM_CONTRACT_DATE_SCANNER_API_PROXY_URL = os.getenv("EVM_CONTRACT_DATE_SCANNER_API_PROXY_URL", "")
EVM_CONTRACT_DATE_SCANNER_RUN_INTERVAL = int(os.getenv("EVM_CONTRACT_DATE_SCANNER_RUN_INTERVAL"))
EVM_CONTRACT_DATE_SCANNER_BATCH_SIZE = int(os.getenv("EVM_CONTRACT_DATE_SCANNER_BATCH_SIZE"))

# --- Настройки EvmContractSourceScanner (Анализ исходного кода контрактов) ---
EVM_CONTRACT_SOURCE_SCANNER_RUN_INTERVAL = int(os.getenv("EVM_CONTRACT_SOURCE_SCANNER_RUN_INTERVAL", 600))
EVM_CONTRACT_SOURCE_SCANNER_BATCH_SIZE = int(os.getenv("EVM_CONTRACT_SOURCE_SCANNER_BATCH_SIZE", 5))

EVM_GET_TOKEN_METADATA_API_URL = os.getenv("EVM_GET_TOKEN_METADATA_API_URL")
EVM_GET_TOKEN_METADATA_API_KEY = os.getenv("EVM_GET_TOKEN_METADATA_API_KEY")
EVM_GET_TOKEN_METADATA_API_TIMEOUT = int(os.getenv("EVM_GET_TOKEN_METADATA_API_TIMEOUT"))
EVM_GET_TOKEN_METADATA_API_PROXY_URL = os.getenv("EVM_GET_TOKEN_METADATA_API_PROXY_URL", "")

_abi_keywords_str = os.getenv("AIRDROP_ABI_KEYWORDS", "airdrop,claim,iseligible,merkle,proof,eligible")
AIRDROP_ABI_KEYWORDS = [keyword.strip().lower() for keyword in _abi_keywords_str.split(',')]

APP_HOST = os.getenv("APP_HOST")
APP_PORT = int(os.getenv("APP_PORT"))

CORS_ORIGINS = os.getenv("CORS_ORIGINS")
CORS_METHODS = os.getenv("CORS_METHODS")
CORS_HEADERS = os.getenv("CORS_HEADERS")
CORS_CREDENTIALS = os.getenv("CORS_CREDENTIALS").lower() == 'true'

MYSQL_HOST = os.getenv("MYSQL_HOST")
MYSQL_DATABASE = os.getenv("MYSQL_DATABASE")
MYSQL_USER = os.getenv("MYSQL_USER")
MYSQL_PASSWORD = os.getenv("MYSQL_PASSWORD")
MYSQL_PORT = int(os.getenv("MYSQL_PORT"))